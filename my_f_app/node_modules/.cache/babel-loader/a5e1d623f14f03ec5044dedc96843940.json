{"ast":null,"code":"var _jsxFileName = \"C:\\\\IT_academy\\\\web_app\\\\my_f_app\\\\src\\\\ToDoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport './ToDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = () => {\n  _s();\n\n  const [inputText, setInputText] = useState(\"Enter a task...\");\n  const [tasks, setTasks] = useState([{\n    id: uuid(),\n    title: 'Buy bread'\n  }, {\n    id: uuid(),\n    title: 'Celebrate'\n  }, {\n    id: uuid(),\n    title: 'Create site'\n  }]);\n  console.log(tasks);\n\n  const addTask = () => {\n    if (inputText.trim() === '') return alert('Empty string cannot be added');\n    if (tasks.some(el => el.title.toLowerCase() === inputText.toLowerCase())) return alert('Such task already exists');\n    const tasksCopy = [...tasks];\n    tasksCopy.push({\n      id: uuid(),\n      title: inputText\n    });\n    setTasks(tasksCopy);\n    setInputText('Enter a task...');\n  };\n\n  const deleteTask = id => {\n    console.log('delete clicked');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: event => setInputText(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(),\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: tasks.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task\",\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dbtn\",\n            onClick: deleteTask(el.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 71\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToDoList, \"TE6hIVddBgPl1OPhqsYORxR7btM=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["C:/IT_academy/web_app/my_f_app/src/ToDoList.jsx"],"names":["React","useState","v4","uuid","ToDoList","inputText","setInputText","tasks","setTasks","id","title","console","log","addTask","trim","alert","some","el","toLowerCase","tasksCopy","push","deleteTask","event","target","value","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,iBAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAC/B;AAAEQ,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,KAAK,EAAE;AAArB,GAD+B,EAE/B;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,KAAK,EAAE;AAArB,GAF+B,EAG/B;AAAED,IAAAA,EAAE,EAAEN,IAAI,EAAV;AAAcO,IAAAA,KAAK,EAAE;AAArB,GAH+B,CAAD,CAAlC;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AAEA,QAAMM,OAAO,GAAG,MAAM;AAClB,QAAGR,SAAS,CAACS,IAAV,OAAoB,EAAvB,EAA2B,OAAOC,KAAK,CAAC,8BAAD,CAAZ;AAC3B,QAAIR,KAAK,CAACS,IAAN,CAAYC,EAAD,IAAQA,EAAE,CAACP,KAAH,CAASQ,WAAT,OAA2Bb,SAAS,CAACa,WAAV,EAA9C,CAAJ,EAA4E,OAAOH,KAAK,CAAC,0BAAD,CAAZ;AAC5E,UAAMI,SAAS,GAAG,CAAC,GAAGZ,KAAJ,CAAlB;AACAY,IAAAA,SAAS,CAACC,IAAV,CAAe;AAACX,MAAAA,EAAE,EAAEN,IAAI,EAAT;AAAaO,MAAAA,KAAK,EAAEL;AAApB,KAAf;AACAG,IAAAA,QAAQ,CAACW,SAAD,CAAR;AACAb,IAAAA,YAAY,CAAC,iBAAD,CAAZ;AACH,GAPD;;AASA,QAAMe,UAAU,GAAIZ,EAAD,IAAM;AACvBE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEP,SAA1B;AAAqC,MAAA,QAAQ,EAAGiB,KAAD,IAAShB,YAAY,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAApE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMX,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBACKN,KAAK,CAACkB,GAAN,CAAWR,EAAD,IAAQ;AACf,4BAAO;AAAgB,UAAA,SAAS,EAAC,MAA1B;AAAA,qBAAkCA,EAAE,CAACP,KAArC,eAA2C;AAAQ,YAAA,SAAS,EAAG,MAApB;AAA2B,YAAA,OAAO,EAAEW,UAAU,CAACJ,EAAE,CAACR,EAAJ,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3C;AAAA,WAASQ,EAAE,CAACR,EAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjCD;;GAAML,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport {v4 as uuid} from 'uuid'\r\nimport './ToDoList.css'\r\n\r\nconst ToDoList = () => {\r\n    const [inputText, setInputText] = useState(\"Enter a task...\");\r\n    const [tasks, setTasks] = useState([\r\n        { id: uuid(), title: 'Buy bread' },\r\n        { id: uuid(), title: 'Celebrate' },\r\n        { id: uuid(), title: 'Create site' }\r\n    ])\r\n    console.log(tasks)\r\n\r\n    const addTask = () => {\r\n        if(inputText.trim() ==='') return alert('Empty string cannot be added');\r\n        if (tasks.some((el) => el.title.toLowerCase() === inputText.toLowerCase())) return alert('Such task already exists');\r\n        const tasksCopy = [...tasks];\r\n        tasksCopy.push({id: uuid(), title: inputText});\r\n        setTasks(tasksCopy);\r\n        setInputText('Enter a task...');\r\n    }\r\n\r\n    const deleteTask = (id)=>{\r\n      console.log('delete clicked')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"todo-wrapper\">\r\n            <input type=\"text\" value={inputText} onChange={(event)=>setInputText(event.target.value)}/>\r\n            <button onClick={() => addTask()}>Add task</button>\r\n            <ul className=\"list\">\r\n                {tasks.map((el) => {\r\n                    return <li key={el.id} className=\"task\">{el.title}<button className = \"dbtn\" onClick={deleteTask(el.id)}>Delete</button></li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList\r\n"]},"metadata":{},"sourceType":"module"}